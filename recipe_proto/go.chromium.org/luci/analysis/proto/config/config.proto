// Copyright 2022 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package luci.analysis.config;

option go_package = "go.chromium.org/luci/analysis/proto/config;configpb";

// Config is the service-wide configuration data for LUCI Analysis.
message Config {
  // The endpoint for Monorail APIs.
  string monorail_hostname = 1;

  // The GCS bucket that chunk contents should be archived to.
  string chunk_gcs_bucket = 2;

  // The number of workers to use when re-clustering. Maximum value is 1000,
  // which is the default max_concurrent_requests on the reclustering queue:
  // https://cloud.google.com/appengine/docs/standard/go111/config/queueref.
  //
  // If this is unset or zero, re-clustering is disabled.
  int64 reclustering_workers = 3;

  // Deprecated November 2022. Setting this has no effect. Field retained
  // to maintain backwards compatibility with old configuration files.
  int64 reclustering_interval_minutes = 4;

  // Controls whether LUCI Analysis will interact with bug-filing systems.
  // Can be used to stop LUCI Analysis auto-bug filing and updates in
  // response to a problem.
  bool bug_updates_enabled = 5;

  // Config related to test variant analysis.
  TestVariantAnalysis test_variant_analysis = 6;

  // Config related to ingestion.
  Ingestion ingestion = 7;

  // Config to control the test verdict export.
  TestVerdictExport test_verdict_export = 8;

  // Configuration related to failure clustering.
  ClusteringSystem clustering = 9;

  // Configuration related to automatic bug management.
  BugManagementSystem bug_management = 10;
}

// TestVariantAnalysis controls how LUCI Analysis run test variant
// analysis.
// It can be used to turn on or off test variant analysis if a problem occurs.
message TestVariantAnalysis {
  // Controls whether we should run test variant analysis during ingestion.
  // It should be only enabled on dev at the beginning, before we are confident
  // enough to turn it on for prod.
  bool enabled = 1;
  // Controls whether we should export test variant analysis result to
  // BigQuery. To turn this on, the "enabled" flag should also be turned on.
  bool bigquery_export_enabled = 2;
}

// ClusteringSystem controls system-level settings related to LUCI Analysis
// clustering. For project-level clustering settings, see the
// `Clustering` message instead.
message ClusteringSystem {
  // Controls whether test variant analysis may be queried when clustering
  // failures. If set, the test_variant_branch column will be populated
  // for clustered_failures rows in BigQuery, if the failures have source
  // position data.
  bool query_test_variant_analysis_enabled = 1;
}

// Settings to control ingestion.
message Ingestion {
  // Whether ingestion should be limited to allowlisted projects only.
  // By default, allowlisting is not enabled and all projects are ingested.
  bool project_allowlist_enabled = 1;

  // The list of allowlisted LUCI projects, e.g. "chromium", "chromeos".
  // Only used if project_allowlist_enabled is set.
  repeated string project_allowlist = 2;
}

// TestVerdictExport contains settings to control the test verdict export.
message TestVerdictExport {
  // Controls whether test verdicts are exported. Can be used to
  // contain damage during production incidents.
  bool enabled = 1;
}

// BugManagementSystem controls system-level settings related to
// automatic bug management. For project-level clustering settings, see
// the `BugManagement` message instead.
message BugManagementSystem {
  // Deprecated. No longer has any effect. Retained for textproto
  // compatibility only. Policy-based bug filing is now always enabled.
  bool policy_based_management_enabled = 1;
}
