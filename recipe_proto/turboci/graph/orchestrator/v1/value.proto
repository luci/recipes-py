// Copyright 2025 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package turboci.graph.orchestrator.v1;

import "google/api/field_behavior.proto";
import "google/protobuf/any.proto";

option go_package = "go.chromium.org/turboci/proto/go/graph/orchestrator/v1;orchestratorpb";
option java_multiple_files = true;

// Value wraps a google.protobuf.Any but also provides a space for the server to
// give back an alternate serialization of the Any.
//
// The fields other than `value` are only conditionally set if the user
// requested alternate serialization.
//
// These alternate serializations use an eventually-consistent version of the
// proto, so it's possible for this to be missing fields vs. what is in the
// binary `value` field. These alternate serializations can be requested via
// QueryNodes with `alternate_serialization` set. The intent is to allow UIs to
// generically display this data, or for scripts (potentially including LLMs) to
// observe the data without having the proto descriptors handy.
//
// When writing this type to the server, only `value` is allowed to be
// populated.
message Value {
  // The actual value.
  optional google.protobuf.Any value = 1;

  // If true the server knows that `value` contains unknown fields according to
  // the current proto descriptor loaded on the server.
  //
  // This can happen if the server's copy of the proto descriptor for `value` is
  // out of date vs the descriptor used by the writer for this Datum.
  optional bool has_unknown_fields = 2 [(google.api.field_behavior) = OUTPUT_ONLY];

  // A ProtoJSON-serialized version of `value`.
  optional string value_json = 3 [(google.api.field_behavior) = OUTPUT_ONLY];
}
